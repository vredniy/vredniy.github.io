<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Записки Вредного программиста]]></title>
  <link href="http://zudochkin.ru/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://zudochkin.ru/"/>
  <updated>2014-02-01T22:46:41+04:00</updated>
  <id>http://zudochkin.ru/</id>
  <author>
    <name><![CDATA[Зудочкин Дима]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby OpenURI::open и ProgressBar]]></title>
    <link href="http://zudochkin.ru/2013/11/open-uri-progress-bar"/>
    <updated>2013-11-25T18:43:24+04:00</updated>
    <id>http://zudochkin.ru/2013/11/open-uri-progress-bar</id>
    <content type="html"><![CDATA[<p>Рыская по документации к методу open из набора OpenURI (мне нужно было установить большее значение timeout'а). Пролистав нужное место в документации натолкнулся на интересные параметры, с которыми можно вызывать метод open.<!--more--></p>

<ul>
<li><code>:content_length_proc =&gt; lambda {|content_length| ... }</code> &ndash; если данный proc установлен, то в него передается Content-Length или nil, если данный параметр недоступен. В этот момент мы уже знаем полный размер файлы и можем нарисовать красивый ProgressBar.</li>
<li><code>:progress_proc =&gt; lambda {|size| ...}</code> &ndash; данный proc вызывается с одним параметром (размер скаченного фрагмента в байтах), когда метод <strong>open</strong> получает очередной фрагмент из сети.</li>
<li><code>:read_timeout=&gt;10</code> &ndash; это тот параметр, из-за которого я и полез в документацию, устанавливает таймаут на чтение для http соединения.</li>
</ul>


<p>А теперь небольшой пример использования данных знаний. Нам понадобится большой файл, я взял трехмегабайтный файл и положил его в Dropbox/Public, чтобы легко было получить на него ссылку. Также понадобится установленный gem <a href="https://github.com/jfelchner/ruby-progressbar">ruby-progressbar</a>.</p>

<p>Вот и все, работающий пример готов.</p>

<p>``` ruby
require &lsquo;ruby-progressbar&rsquo;
require &lsquo;open-uri&rsquo;</p>

<p>progress_bar = nil
open(&lsquo;https://dl.dropboxusercontent.com/u/11041525/DIX1.0Universal.dmg&rsquo;,
  content_length_proc: proc { |total|</p>

<pre><code>if total.to_i &gt; 0
  progress_bar = ProgressBar.create(title: 'Downloaded', total: total)
end
</code></pre>

<p>},
progress_proc: proc { |step|
  progress_bar.progress = step
}) { |file| puts &ldquo;File #{file} successfully downloaded&rdquo; }
```</p>

<iframe width="560" height="315" src="http://zudochkin.ru//www.youtube.com/embed/SIWBIl1oRrc" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
</feed>
