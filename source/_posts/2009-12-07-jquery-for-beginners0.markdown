---
author: admin
comments: true
date: 2009-12-07 20:24:02+00:00
layout: post
slug: jquery-for-beginners0

permalink: /2009/12/jquery-for-beginners0

title: jQuery для начинающих. часть 0
wordpress_id: 114
categories:
- jQuery
tags:
- jQuery
---

[caption id="attachment_121" align="aligncenter" width="300" caption="jquery для начинающих"][![jquery для начинающих](http://vredniy.ru/wp-content/uploads/2009/12/jquery-300x184.jpg)](http://vredniy.ru/wp-content/uploads/2009/12/jquery.jpg)[/caption]

Здравствуйте, уважаемые!

Сегодня я начну цикл статей под общим названием "jQuery для начинающих", который поможет начинающим, а может и не только начинающим, освоить сей замечательный JavaScript фреймворк, набирающий в последнее время все большую популярность из-за своей простоты и богатых возможностей.
<!-- more -->
Почему jQuery? Каждый ответит на этот вопрос по-своему, начав изучать его и используя его в своих web-проектах. Для себя я отвечаю на этот вопрос так: Зачем писать на "чистом" JavaScript десятки строк, когда можно подключать jQuery-библиотеку и написать всего 1 или 2, которые будут нагляднее демонстрировать логику приложения. И еще, для jQuery написано множество библиотек, расширяющих его возможности, да и самому написать плагин для jQuery не составит большого труда. Дополнения могут в разы уменьшить код и облегчить продумывания логики.

Перед началом скучной теории, хочу показать как легко можно раскрасить каждую вторую строку таблицы средствами jQuery.

Создадим класс для четных строк, который будет инвертировать цвет фона и цвет текста.
`
.even {background-color: #000; color: #fff}
`

Подключаем саму библиотеку jQuery через Google API (я предпочитаю именно этот вариант), потому как думаю, что даже когда придет конец света, гугл все равно стоять будет и предоставлять свои функции.
`

`
А теперь наконец-то напишем эту строчку кода на jQuery, которая и выполняет всю "черную" работу по раскраске таблицы. Для того, чтобы наш код начал выполняться не после того, как загрузится вся страница(метод onload) со всеми картинками, баннерами и внешними iframe'ами, а сразу же после построения дерева DOM, а это происходит за много до того, воспользуемся конструкцией jQuery вида
`
$(document).ready(function() {
$("table tr:nth-child(even)").addClass("even");
});
`
Или сокращенной формой записи
`
$(function() {
$("table tr:nth-child(even)").addClass("even");
});
`
Если вам сейчас не понятен этот код, не расстраивайтесь, скоро все встанет на места, и вы сами сможете написать конструкции в много раз сложнее. Но наберитесь терпения.

То, что у нас должно было получиться мы можем увидеть на маленьком [примере](/examples/jquery/0/), который я для вас подготовил.

Ну и теперь самое интересное. Для того, чтобы освоить jQuery в первую очередь надо научиться выбирать объекты для последующих с ними манипуляций. jQuery очень богат возможностью выбора элементов на странице: он поддерживает все способы, который предоставляет CSS2, многое из того, что предоставляет CSS3 и, помимо этого, имеет встроенные в ядро богатые возможности.

Итак, начнем.

В первую очередь jQuery конечно же поддерживает выборку по тегам. Например,
`
$("p")
`
выберет все параграфы, имеющееся на странице.

Потом мы можем выбрать элементы на странице с помощью jQuery при помощи идентификаторов.
`
$("a#external")
`
Сейчас имеем дело со ссылкой с идентификатором #external.

Чтобы выбрать ссылки, находящиеся внутри параграфа, нужно написать
`
$("p a")
`
Под это определение попадут все ссылки, которые находятся в теге параграфа, могут также быть обернуты другими тегами, например, списком.

Если нужен непосредственный потомок-ссылка параграфа, то
`
$("p > a")
`
Этому селектору соответствуют ссылки, которые являются прямыми потомками элемента P (параграф).

Сейчас попробуем выбрать ссылки, которые ведут на другой сайт: по большей части, внешние ссылки имеют начало "http://". Теперь запишем это.
`
$("a[href^=http://]")
`
Конструкций ^= показывает, что следует сопоставить это выражение с началом, как в регулярных выражениях.

Если нам нужно выбрать все ссылки, которые указывают на архивы, пишем
`
$("a[href$=.rar]")
`
В этой коллекции окажутся все ссылки, заканчивающиеся на ".rar"

Таких конструкций, облегчающих нам жизнь в CSS очень много, еще хотелось бы сказать об одной. А именно выборке только текстовых полей из всего разнообразий input-элементов.
`
$("input[type=text]")
`

Также мы можем выбирать элементы по позиции.
Например, a:first - выберет только первую ссылку.
Нечентый элемент p:odd позволит, например, нам сделать красивые отступы абзацев.
Подобных селекторов тоже не мало, мы познакомимся с ними в течение последующих уроков.

Напоследок, я покажу вам простой пример, демонстрирующий лишь малую часть возможностей jQuery, а именно плавное появление картинки. [Ссылка на пример jQuery](/examples/jquery/0/index2.html).

До новых встреч =)
