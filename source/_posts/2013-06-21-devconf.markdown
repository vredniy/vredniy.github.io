---
author: admin
comments: true
date: 2013-06-18 17:31:24+00:00
layout: post
slug: devconf

permalink: /2013/06/devconf


title: Devconf 2013 - мои впечатления, ссылки на доклады и несколько фоток :)

categories:
- Ruby
- Ruby On Rails
- программирование
tags:
- devconf
- ruby on rails
- ruby

keywords: devconf 2013, devconf ruby, devconf ruby on rails

description: Несколько слов и моих мыслей о прошедшей 14 июня 2013 года конференции Devconf. Полезные ссылки на некоторые презентации и на интересные гемы.
---


Прошло 4 года с моего последнего и в то же время первого визита на конференцию разработчиков. 4 года назад сидел я в секции #php и почти не понимал что происходит, не понимал о каких проблемах говорят докладчики, но для меня это было, однозначно, в новинку и очень интересным. В течение всех этих лет желание посещать технические конференции только росло, но возможности, к сожалению, предоставлялось из-за не очень заинтересованных в этом работодателей. <!--more-->

{% img image /images/posts/2013-06-devconf/devconf2010.gif %}

Чуть больше года назад я сменил язык разработки и окончательно перешел на Ruby. Теперь желание заключалось в том, чтобы посетить Ruby секцию на той же [DevConf](http://devconf.ru/). И вот, наконец, минимечта сбылась, и я на конференции.

К сожалению, пришлось немного опоздать из-за того, что любовь ко сну немного пересилила любовь к получению новых знаний.

### Доклады

{% img image /images/posts/2013-06-devconf/2013-06-14_11.16.27.jpg %}

И вот регистрация и начало нового доклада, который не хотелось пропускать, ведь выступал чел, забаненный на Github'е, специалист по безопасности [Егор Хомяков](https://twitter.com/homakov "@homakov") со своим докладом "Безопасный сайт на примере Rails". Его рассказал про всевозможные атаки в web'е, как с ними бороться нужно и как эти проблемы решают (или как не решают) нами любимые рельсы. Узнал много нового о типах атаках и способов защиты с ними. [Презентацию](http://f.cl.ly/items/2G3g462j2T0o1w0g3K2o/rails%20and%20security.pdf "Безопасный сайт на примере Rails") помог достать из интернетов товарищ [roma](https://twitter.com/milushov), за что ему отдельное спасибо.

{% img image /images/posts/2013-06-devconf/2013-06-14_11.04.56.jpg %}

Дальше был кофебрейк, на котором было сложно протиснуться, поэтому кофе попить не удалось, ну, хоть, водички попили.


После кофебрейка удалось таки занять сидячие места и спокойно с интересом послушать очередного докладчика, которым оказался разработчик из Питера Николай Рыжиков, рассказавший нам о [DDD](http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5 "Проблемно-ориантированное проектирование") в [докладе](http://f.cl.ly/items/2b3C0H3S0n2a473x1M3Z/DDD%20on%20rails.pdf) под названием **"Domain Driven Design on Rails"**. Я очень часто слышал эту аббревиатуру, но так до конца и не понимал что это, как это готовить и как использовать в своих проектах (и сейчас не понимаю, но я научусь).

После очередного интересного доклада, после которого захотелось освоить эти забавные, но еще так непонятные 3D, мы послушали [доклад](http://www.slideshare.net/profyclub_ru/13-20022107) с громким названием **"Быстрое тестирование Ruby on Rails"** от Александра Балашова, из компании-спонсора DevConf Evrone. Рассказ получился очень поверхностным, который можно уложить в одно приложение: *"Используйте поменьше обращений к БД и юзайте [Spring](https://github.com/jonleighton/spring), [Zeus](https://github.com/burke/zeus) или [spork](https://github.com/sporkrb/spork) для ускорения запуска приложения"*.

{% img image /images/posts/2013-06-devconf/2013-06-14_13.57.20.jpg %}

Следующий доклад **"Проектирование API"** прочитал [Игорь Кузнецов](https://twitter.com/igkuz "@igkuz") - Ruby разработчик из Undev.ru. Этот доклад я очень хотел послушать, потому что реализовывать API самому не приходилось,  а очень хотелось попробовать написать что-то подобное, наступая на "подводные камни". Но, к сожалению, вопросов, которые я бы хотел услышать в докладе не освещалось, а именно аутентификация и больше практических советов, аля как использовать rails-api в связке с гемом devise, какие есть костыли и прочее. Но автор коснулся лишь теоретических основ проектирования API, что тоже было очень интересно послушать, кое-что я занес в заметки, чтобы в дальнейшем посмотреть. Интересно было рассказано про версионирование: отличие мажорной и минорной версии, какие изменения должно увеличивать мажорную, а какие минорную версию. И, конечно же стоит отметить упоминания автором доклада темы [JSON Schema](http://json-schema.org/), которая одновременно является и документацией для API, и валидатором.

{% img image /images/posts/2013-06-devconf/2013-06-14_14.40.35.jpg %}

После доклада, который закончился немного раньше мы двинули на обед, благо, что нас отпустили немного раньше положенного времени, ибо, когда мы уходили с обеда очередь за едой была километровая. Покормили знатно, как в Египте прям, шведский стол, куча блюд и куча сладостей с фондю. В общем обед придал новых сил и мы двинули на очередной доклад.


Александров Игорь из компании JetRockets рассказал нам о ["Биллинге в SaaS-системах на Rails"](https://speakerdeck.com/alexandrov/billing-in-rails-saas-applications). Перед каждым, кто принимает платежи в своих проектах обязательно встает вопрос отдавать биллинг на аутсорс или реализовывать свою систему оплаты. Игорь рассказал и про плюсы, и про минусы обеих систем. Дальше рассказал про путь, в котором вы разрабатывает свою систему: биллинговый интервал и страшное название **PCI-compliant**, являющееся набором требований для организаций, сервисов, которые работают с платежными данными пользователей. Специально для Devconf 2013 было разработано приложение [SpaceShip](https://github.com/igor-alexandrov/spaceship "Demo application for DevConf 2013"), показывающее все, что сказал автор доклада: биллинговые периоды, тарифы и пр.

{% img image /images/posts/2013-06-devconf/2013-06-14_16.48.29.jpg %}

Ну а дальше был апофеоз всего Devconf'а, доклад, ради которого стоило пойти на конференцию, даже если бы не было вкусного обеда  и остальных докладчиков. [Кирилл Мокевнин](http://kaize.ru/ "ортодоксальный приверженец SOLID-принципа"), известный и php мире, и в мире Ruby on Rails, превосходный докладчик и специалист, разбирающийся в своем деле. Доклад назывался ["Архитектурные практики в Rails"](https://speakerdeck.com/mokevnin/arkhitiekturnyie-praktiki-v-rails), где Кирилл поделился со слушателями своим опытом разработки, рассказал о проблемах, с которыми сталкивался и как их решал сам.
Были описаны следующие проблемы:

* Организация иерархии в  папках с контроллерами и моделями, [наименования модулей](http://habrahabr.ru/post/136461/ "Ссылка автора на свой пост на Хабрахабре") и написание удобных правил в `config/routes.rb`.
* Ссылки в js, замечатели ли вы что очень часто пишем в javascript-coffescript файлах, нечто похожее на "/posts/#{post.slug}", Кирилл рекомендует использовать для этих целей гем [js-routes](https://github.com/railsware/js-routes/ "Bringing Rails named routes to javascript").
* Использовать для фильрации и сортировки гем [ransack](https://github.com/ernie/ransack "Object-based searching. The successor to MetaSearch"). Данный гем не пробовал, поэтому ничего пока сказать не могу.
* Также автор затронул вопрос DDD, чем однозначно убедил прочитать в ближайшее время книгу Эрика Эванса "Domain-Driven Design. Tackling Complexity in the Heart of Software"
* Также несколько примеров, которые приводит Кирилл
  * [7 Patterns to Refactor Fat ActiveRecord Models](http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/ "7 Patterns to Refactor Fat ActiveRecord Models")
  * [Проект nastachku.ru на Github'е](https://github.com/kaize/nastachku)
  * не стесняйтесь использовать custom inputs в simple_form
  * используйте gem версии популярных js библиотек, иначе вы забываете их обновлять :) [Gem Vendorer, если нет гема для библиотеки, которую вы используете](https://github.com/grosser/vendorer "Vendorer keeps your dependencies documented, cached and up to date")
  * before фильтры, а также before_validate - зло

К сожалению, после этого доклада пришлось покинуть конференцию, сожалея только о том, что пропущу очередной доклад Кирилла Мокевнина "Ментальное программирование", но его по техническим причинам прервали. Сам Кирилл, предлагает посмотреть [видео](http://www.youtube.com/watch?v=eEEHWQNuCLQ "Ментальное программирование") на Youtube'e с его предыдущим выступлением, которое называется также.

### Подводя итоги
… хочется сказать, что конференция была очень поучительна, но почему-то я ожидал от нее большего. Многие вопросы, которые освещались были мне знакомы, поэтому я прослушал их как чужое мнение на вопросы, с которыми приходилось иметь дело.
Но, вцелом, хочется поблагодарить спонсоров и огранизаторов конференции за такую замечательную конференцию, которая дает "волшебный пендель", прививает очередную порцию любви к программированию и дает пообщаться с коллегами по цеху о методах решения тех или иных вопросов :)

### P.S.
Несколько дней писал данный пост, вносил кучу дополнений и изменений, но, думаю, что на этом достаточно, иначе пост никогда не увидит свет.

### P.S. №2
Презентации с доклада, которые пропустил:

* от [Анаталия Макаревича](https://twitter.com/makaroni4 "@makaroni4") ["Рефакторинг Ruby кода"](http://www.slideshare.net/profyclub_ru/12-20022066)
* от [Николая Шебанова](https://twitter.com/killthekitten "@killthekitten") ["Спасение утопающих - покрываем тестами взрослый Ruby on Rails проект"](http://www.slideshare.net/profyclub_ru/14-20022236)

### P.S. №3
Зарабатываю кружечку от Reg.ru, поднимая тяжести. {% img image /images/posts/2013-06-devconf/13.jpg %}
