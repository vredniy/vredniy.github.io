<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Записки Вредного программиста]]></title>
  <link href="http://zudochkin.ru/atom.xml" rel="self"/>
  <link href="http://zudochkin.ru/"/>
  <updated>2014-02-01T18:01:49+04:00</updated>
  <id>http://zudochkin.ru/</id>
  <author>
    <name><![CDATA[Зудочкин Дима]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Парсим news.ycombinator.com или не рельсами едиными жив человек (Sinatra, DataMapper)]]></title>
    <link href="http://zudochkin.ru/2013/03/sinatra-datamapper-news-combinator"/>
    <updated>2013-03-05T23:29:26+04:00</updated>
    <id>http://zudochkin.ru/2013/03/sinatra-datamapper-news-combinator</id>
    <content type="html"><![CDATA[<p>Дело было вечером, делать было нечего и решил я написать небольшое приложение на Sinatra с Datamapper&#8217;ом. За идеей далеко ходить также не пришлось: решил написать небольшой &ldquo;фильтратор&rdquo; интересного для меня контента из новостей news.ycombinator.ru.<!-- more --> Не стал изобретать велосипед на этот раз и интересными буду считать новости, названия которых содержат определенные слова. Будем отображать список прочитанных и непрочитанных новостей. Список новостей каждый час будет обновляться по cron&#8217;у &ndash; вот и вся задача.</p>

<p>Начнем с реализации: для этого нам понадобится:</p>

<ul>
<li>data_mapper с двумя адаптерами (sqlite3 для локального использование и postgresql для production&#8217;а)</li>
<li>sinatra</li>
<li>coffeeScript, хоть можно было и легко обойтись без него</li>
<li>slim в качестве шаблонизатора</li>
</ul>


<p>Итак, поехали:</p>

<p>Gemfile:</p>

<div>
  <pre><code class='ruby'>source &#39;https://rubygems.org&#39;

gem &#39;sinatra&#39;
gem &#39;data_mapper&#39;

group :development do
  gem &#39;dm-sqlite-adapter&#39;
  gem &#39;capistrano&#39;
end

group :production do
  gem &#39;dm-postgres-adapter&#39;
end

gem &#39;slim&#39;
gem &#39;coffee-script&#39;
gem &#39;whenever&#39;, :require =&gt; false

gem &#39;nokogiri&#39;

gem &#39;unicorn&#39;</code></pre>
</div>


<p>В нем нет ничего необычного, добавляем необходимые гемы для разных сред.</p>

<p>Теперь самое интересное: основной файл приложения, который занимает больше всего места.</p>

<p>./app.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;slim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;coffee-script&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;data_mapper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">DataMapper</span><span class="p">:</span><span class="ss">:Property</span><span class="o">::</span><span class="nb">String</span><span class="o">.</span><span class="n">length</span><span class="p">(</span><span class="mi">400</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">configure</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">DataMapper</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="ss">:default</span><span class="p">,</span> <span class="s1">&#39;sqlite3:./db/articles.db&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">configure</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">DataMapper</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="ss">:default</span><span class="p">,</span> <span class="s1">&#39;postgres://deployer:funnydb@localhost/ycombinator&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Article</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">DataMapper</span><span class="p">:</span><span class="ss">:Resource</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">INTERESTING_KEYWORDS</span> <span class="o">=</span> <span class="sx">%w(ruby rails coffee js javascript ember angular</span>
</span><span class='line'><span class="sx">    backbone tdd rspec shoulda gem unicorn nginx sinatra vim mac)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:id</span><span class="p">,</span> <span class="no">Serial</span>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:url</span><span class="p">,</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">:unique_index</span> <span class="o">=&gt;</span> <span class="ss">:u</span><span class="p">,</span> <span class="ss">:required</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:format</span> <span class="o">=&gt;</span> <span class="ss">:url</span>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:title</span><span class="p">,</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">:required</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:index</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:interesting</span><span class="p">,</span> <span class="no">Boolean</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:read_at</span><span class="p">,</span> <span class="no">DateTime</span>
</span><span class='line'>  <span class="n">timestamps</span> <span class="ss">:created_at</span><span class="p">,</span> <span class="ss">:updated_on</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">interesting?</span>
</span><span class='line'>    <span class="o">!!</span><span class="p">(</span><span class="n">title</span> <span class="o">=~</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">INTERESTING_KEYWORDS</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">),</span> <span class="ss">Regexp</span><span class="p">:</span><span class="ss">:IGNORECASE</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">interesting_to_me</span>
</span><span class='line'>    <span class="n">all</span><span class="p">(</span><span class="ss">:interesting</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">unread</span>
</span><span class='line'>    <span class="n">all</span><span class="p">(</span><span class="ss">:read_at</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">read</span>
</span><span class='line'>    <span class="n">all</span><span class="p">(</span><span class="ss">:read_at</span><span class="o">.</span><span class="n">not</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search</span><span class="p">(</span><span class="n">term</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">DataMapper</span><span class="o">.</span><span class="n">repository</span><span class="o">.</span><span class="n">adapter</span><span class="o">.</span><span class="n">options</span><span class="o">[</span><span class="ss">:scheme</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;sqlite3&#39;</span>
</span><span class='line'>      <span class="n">all</span><span class="p">(</span><span class="ss">:title</span><span class="o">.</span><span class="n">like</span> <span class="o">=&gt;</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">term</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">%&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">all</span><span class="p">(</span><span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="o">[</span> <span class="s1">&#39;title ILIKE ?&#39;</span><span class="p">,</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">term</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">%&quot;</span> <span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">DataMapper</span><span class="o">.</span><span class="n">finalize</span>
</span><span class='line'><span class="c1">#DataMapper.auto_migrate!</span>
</span><span class='line'><span class="no">DataMapper</span><span class="o">.</span><span class="n">auto_upgrade!</span>
</span><span class='line'>
</span><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">do_process</span><span class="p">(</span><span class="n">scope</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@search_term</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">].</span><span class="n">nil?</span> <span class="p">?</span> <span class="kp">nil</span> <span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@articles</span> <span class="o">=</span> <span class="k">case</span> <span class="n">scope</span>
</span><span class='line'>                <span class="k">when</span> <span class="ss">:all</span>
</span><span class='line'>                  <span class="no">Article</span>
</span><span class='line'>                <span class="k">when</span> <span class="ss">:all_read</span>
</span><span class='line'>                  <span class="no">Article</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>                <span class="k">when</span> <span class="ss">:all_unread</span>
</span><span class='line'>                  <span class="no">Article</span><span class="o">.</span><span class="n">unread</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                  <span class="no">Article</span><span class="o">.</span><span class="n">interesting_to_me</span><span class="o">.</span><span class="n">unread</span>
</span><span class='line'>                <span class="k">end</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="vi">@search_term</span><span class="p">)</span>
</span><span class='line'>    <span class="n">slim</span> <span class="ss">:index</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/application.js&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">coffee</span> <span class="ss">:application</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/:id/read&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@article</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@article</span><span class="o">.</span><span class="n">read_at</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
</span><span class='line'>  <span class="vi">@article</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/all&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">do_process</span> <span class="ss">:all</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/all/read&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">do_process</span> <span class="ss">:all_read</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/all/unread&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">do_process</span> <span class="ss">:all_unread</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/*&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">do_process</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>А теперь немного комментариев:</p>

<ul>
<li><p><strong>1-5 строки</strong> &ndash; подключаем необходимые для работы файлы</p></li>
<li><p><strong>7 строка</strong> &ndash; сообщаем DataMapper&#8217;y, что длина строки (String) не 80 символов, а 400, 255 не хватает.</p></li>
<li><p><strong>9-15</strong> &ndash; конфигурируем два адаптера: один для разработки, другой для продакшна.</p></li>
<li><p><strong>17-53</strong></p>

<ul>
<li><p><strong>20,21</strong> &ndash; объявляем интересные мне ключевые слова</p></li>
<li><p><strong>23-28</strong> &ndash; описываем все поля, которые будут в нашей модели</p></li>
<li><p><strong>30-32</strong> &ndash; метод interesting? определяет по заголовку новости интересна она мне или нет</p></li>
<li><p><strong>34-40</strong> &ndash; несколько используемых в приложении scope&#8217;ов</p></li>
<li><p><strong>46-52</strong> &ndash; метод search (из-за того, что в Postgresql like учитывает регистр букв, пришлось переписать оператор поиска на ilike, который этого не делает)</p></li>
</ul>
</li>
<li><p><strong>60-73</strong> &ndash; объявляем метод, который является &ldquo;сердцем&rdquo; и в зависимости от параметра заполняет коллекцию определенными статьями и рендерит вьюху ./views/index.slim</p></li>
<li><p><strong>76-78</strong> &ndash; рендерим coffeeScript, которые делает следующее, если мы кликам по новости, то отправляем ajax post запрос и помечаем новость как прочитанную (read_at = Time.now)</p></li>
<li><p><strong>80-84</strong> &ndash; сам метод, который помечает новость прочитанной при post запросе</p></li>
<li><p><strong>86-100</strong> &ndash; разные коллекции (все, прочитанные, непрочитанные и т.д.)</p></li>
</ul>


<p>теперь Rakefile, который будет парсить news.ycombinator.com каждый час</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;./app&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s1">&#39;Parse all articles&#39;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:parse</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">doc</span> <span class="o">=</span> <span class="ss">Nokogiri</span><span class="p">:</span><span class="ss">:HTML</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;http://news.ycombinator.com/&#39;</span><span class="p">))</span>
</span><span class='line'>  <span class="n">links</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.title a&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">next_page_link</span> <span class="o">=</span> <span class="n">links</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>    <span class="n">href</span> <span class="o">=</span> <span class="n">link</span><span class="o">[</span><span class="ss">:href</span><span class="o">]</span>
</span><span class='line'>    <span class="n">text</span> <span class="o">=</span> <span class="n">link</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">unless</span> <span class="no">Article</span><span class="o">.</span><span class="n">first</span><span class="p">(</span><span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">href</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Article</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">href</span><span class="p">,</span> <span class="ss">:title</span> <span class="o">=&gt;</span> <span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">puts</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s1">&#39;Update Interesting tasks&#39;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:update_interesting</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Article</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>    <span class="n">a</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="ss">:interesting</span> <span class="o">=&gt;</span> <span class="n">a</span><span class="o">.</span><span class="n">interesting?</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2"> updated&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>В нем всего две задачи: первая &ndash; парсит новости, вторая нужна для того, что если вдруг изменися интересные ключевые слова, то вы сможете легко обновить список инетересных вам новостей.</p>

<p>Файл, который отвечает за частоту выполнения определенных тасков ./config/shedule.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:output</span><span class="p">,</span> <span class="s1">&#39;/home/deployer/projects/ycombinator/shared/log/shedule.log&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">job_type</span> <span class="ss">:rake</span><span class="p">,</span> <span class="s2">&quot;cd :path &amp;&amp; RACK_ENV=:environment bundle exec rake :task --silent :output&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">every</span> <span class="ss">:hour</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rake</span> <span class="s1">&#39;parse&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>В первой строчке я указываю путь до файла с логами, чтобы каждый раз при запуске rake task&#8217;а в конец добавлялось время последнего обновления. В блоке с every можно очень гибко указать как часто выполняться, смотрите документацию к гему whenever.</p>

<p>Также я добавил несколько строк к файлу, выполняющего деплой из <a href="http://zudochkin.ru/unicorn-rbenv-nginx-postgresql/">Разворачиваем Rails приложение вместе с Capistrano</a>. ./config/deploy.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:application</span><span class="p">,</span> <span class="s1">&#39;ycombinator&#39;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:whenever_command</span><span class="p">,</span> <span class="s2">&quot;bundle exec whenever&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;whenever/capistrano&quot;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь мы можем запустить обновления cron&#8217;а deployer&#8217;а командой <code>cap whenever:update_crontab</code></p>

<p>После ее запуска вы можете проверить, что вышло, обновился ли cron, запустив на сервере, список cron задач: <code>crontab -l</code></p>

<p>Без комментариев оставлю вьюхи, но текст их приведу.</p>

<p>./views/application.coffee</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s">&quot;.article&quot;</span><span class="p">).</span><span class="nx">click</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">post</span> <span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s">&quot;id&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s">&quot;/read&quot;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">(</span><span class="s">&#39;li&#39;</span><span class="p">).</span><span class="nx">remove</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>./views/layout.slim</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">doctype</span> <span class="n">html</span>
</span><span class='line'>
</span><span class='line'><span class="n">head</span>
</span><span class='line'>  <span class="n">title</span> <span class="no">Ycombinator</span>
</span><span class='line'>  <span class="n">script</span> <span class="n">src</span><span class="o">=</span><span class="s2">&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;</span>
</span><span class='line'>  <span class="n">script</span> <span class="n">src</span><span class="o">=</span><span class="s2">&quot;/application.js&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">body</span>
</span><span class='line'>  <span class="n">a</span><span class="p">{</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;/all&quot;</span> <span class="p">}</span> <span class="no">All</span>
</span><span class='line'>  <span class="n">br</span>
</span><span class='line'>  <span class="n">a</span><span class="p">{</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;/all/read&quot;</span> <span class="p">}</span> <span class="no">All</span> <span class="n">read</span>
</span><span class='line'>  <span class="n">br</span>
</span><span class='line'>  <span class="n">a</span><span class="p">{</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;/all/unread&quot;</span> <span class="p">}</span> <span class="no">All</span> <span class="n">unread</span>
</span><span class='line'>  <span class="n">br</span>
</span><span class='line'>  <span class="n">a</span><span class="p">{</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span> <span class="p">}</span> <span class="no">Home</span>
</span><span class='line'>  <span class="n">hr</span>
</span><span class='line'>  <span class="o">==</span> <span class="k">yield</span>
</span></code></pre></td></tr></table></div></figure>


<p>И наконец, ./views/index.slim</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h1</span>
</span><span class='line'>  <span class="s1">&#39; Unread articles</span>
</span><span class='line'><span class="s1">  - if @search_term</span>
</span><span class='line'><span class="s1">    = &quot;searched by: &#39;</span><span class="c1">#{ @search_term }&#39;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="no">Search</span> <span class="n">form</span>
</span><span class='line'><span class="n">form</span><span class="p">{</span> <span class="nb">method</span><span class="o">=</span><span class="s2">&quot;get&quot;</span> <span class="n">action</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">input</span><span class="p">{</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;term&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">#{</span> <span class="vi">@search_term</span> <span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">input</span><span class="p">{</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;Find&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="k">if</span> <span class="vi">@search_term</span>
</span><span class='line'>  <span class="n">a</span><span class="p">{</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span> <span class="p">}</span> <span class="no">Home</span>
</span><span class='line'>
</span><span class='line'><span class="n">ul</span>
</span><span class='line'>  <span class="o">-</span> <span class="vi">@articles</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">article</span><span class="o">|</span>
</span><span class='line'>    <span class="n">li</span>
</span><span class='line'>      <span class="n">a</span><span class="p">{</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">#{</span> <span class="n">article</span><span class="o">.</span><span class="n">url</span> <span class="si">}</span><span class="s2">&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">#{</span> <span class="n">article</span><span class="o">.</span><span class="n">id</span> <span class="si">}</span><span class="s2">&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;article&quot;</span> <span class="n">target</span><span class="o">=</span><span class="s2">&quot;_blank&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="o">=</span> <span class="n">article</span><span class="o">.</span><span class="n">title</span>
</span></code></pre></td></tr></table></div></figure>


<p>Получислось такое незамысловатое и некрасивое приложение :).</p>

<p><img class="image" src="http://zudochkin.ru/images/posts/2013-03-sinatra-datamapper-news-combinator/Screen-Shot-2013-03-05-at-10.33.43-PM.png"></p>

<p>Вместо заключения: чтобы мозги не были напичканы только рельсами (читать как одним фреймворком), мне кажется, необходимо покидать зону комфорта и писать небольшые приложения для души на смежных технологиях. Скажу честно, для того, чтобы реализовать это несложное приложение у меня ушло масса времени на чтение мануалов к Sinatra, DataMapper&#8217;у, нежели на написание кода. Но мне понравилось, практической ценности, конечно, приложение почти не имеет, но мозги размялись однозначно. Разминай мозги, коллега :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Разворачиваем rails приложение вместе с capistrano]]></title>
    <link href="http://zudochkin.ru/2013/03/unicorn-rbenv-nginx-postgresql"/>
    <updated>2013-03-03T16:13:05+04:00</updated>
    <id>http://zudochkin.ru/2013/03/unicorn-rbenv-nginx-postgresql</id>
    <content type="html"><![CDATA[<p>Здравствуйте, дорогие друзья, сегодня я расскажу вам как быстро развернуть Ruby on Rails приложение на сервере. Если у вас маленькое приложение, которое посещает 10 человек в день, то вам достаточно будет задеплоить его на heroku (имею в виду бесплатный тариф) и не читать все то, что написано ниже. Если же у вас приложение побольше, то милости прошу на огонек.<!-- more --></p>

<h3>Сервер</h3>

<p>Сервер: я буду настраивать все на Ubuntu 12.04 (64x), но не думаю, что должны возникнуть сложности с подобной операционной системой. Если же появятся траблы, пишите в комментах, попытаемся решить вместе.</p>

<p>Итак, поехали, логинимся по root&#8217;ом и производим базовую настройку сервера. Я начинаю всегда с локалей, для этого делаю следующее.</p>

<p><strong>localedef ru_RU.UTF-8 -i ru_RU -fUTF-8</strong> и в файл <strong>/etc/default/locale</strong> добавляю</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LANG="ru_RU.UTF-8"
</span><span class='line'>LC_CTYPE="ru_RU.UTF-8"
</span><span class='line'>LC_NUMERIC=C
</span><span class='line'>LC_TIME=C
</span><span class='line'>LC_COLLATE=C
</span><span class='line'>LC_MESSAGES=C</span></code></pre></td></tr></table></div></figure>


<p>Затем создаем пользователя, от лица которого мы и будем все делать и наделим его привилегиями запускать команды через sudo.</p>

<p><code>useradd -m -g staff -s /bin/bash deployer &amp;&amp; passwd deployer</code> &ndash; создаем пользователя deployer в группе staff (флаг -g) и с домашней папкой /home/deployer (флаг -m), флаг -s назначает пользоватлю шел по умолчанию. И задаем ему пароль. В дальнейшем весь экшн будет производиться от имени этого пользователя.</p>

<p>Чтобы наш пользователь мог выполнять команды от рута, необходимо добавить его в группу в файл <strong>/etc/sudoers</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(%staff ALL=(ALL) ALL)</span></code></pre></td></tr></table></div></figure>


<p>Теперь выходим из под рута и логинимся под деплоером. Для того, чтобы не писать пароль каждый раз при входе, необходимо добавить на сервер инфо, что мы свои (авторизация по ключу).</p>

<p><code>cat ~/.ssh/id_rsa.pub | ssh deployer@server "mkdir ~/.ssh; cat &gt;&gt; ~/.ssh/authorized_keys"</code></p>

<p>Если у кого на рабочей машине ubuntu, то они могут запустить эту операцию намного проще (ssh-copy-id deployer@server).</p>

<p>Проверяем, ssh deployer@server более не должно спрашивать пароль, а сразу же пустить нас на сервер.</p>

<p>Для удобства можно добавить в файл <strong>~/.ssh/config</strong>, чтобы удобно было заходить, печатая только <strong>ssh my_serv</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host my_serv
</span><span class='line'>  HostName server.com$
</span><span class='line'>  User deployer$
</span></code></pre></td></tr></table></div></figure>


<p><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code> &ndash; обновляем все источники приложений и накатываем обновления</p>

<h3>Установка и базовая настройка Postgres&#8217;а</h3>

<p><code>sudo apt-get install postgresql libpq-dev</code> (второй пакет нужен для того, чтобы гем pg поставился)</p>

<p>Данная установка подразумевает, что вы не собираетесь соединяться с базой данных с других машин. По умолчанию в Ubuntu, Postgresql сконфигурирован так, чтобы использовать логин текущего пользователя, т.е. если вы вошли под пользователем deployer и в Postgresql есть пользователь deployer, то спрашивать пароль у вас никто не будет.</p>

<p><code>sudo -u postgres createuser --superuser $USER</code> (создаем пользователя deployer, который будет являться суперпользователем, этого делать не желательно, если у вас более, чем один проект, лучше под каждую бд создать отдельных пользователей с разными паролями)</p>

<p><code>sudo -u postgres psql</code> &ndash; запускаем postgres консоль</p>

<p>postgres=# \password deployer &ndash; задаем пароль для нашего пользователя (имя пользователя заменить на свое) &ndash; этот пароль будет использоваться в конфигах вашего приложения (config/database.yml)</p>

<p><code>createdb $USER</code> &ndash; создаем базу данных deployer</p>

<h3>Ставим rbenv, ruby и gem bundler</h3>

<p>Ставим все необходимое, чтобы склонировать репозиторий rbenv, установить последние ruby и пользоваться загрузкой картинок в наших приложениям (последние два пакета).</p>

<p><code>sudo apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libxml2-dev libxslt1-dev autoconf libc6-dev libncurses5-dev libmagickcore-dev imagemagick</code></p>

<p>Теперь давайте перейдем к установки ruby с помощью rbenv и ruby-build. Здесь нет ничего не обычного, в основном все взято со страниц README rbenv и ruby-build.</p>

<h5>rbenv</h5>

<p><code>git clone git://github.com/sstephenson/rbenv.git ~/.rbenv</code></p>

<p><code>echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.bash_profile</code> &ndash; для доступа к команде rbenv</p>

<p><code>echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bash_profile</code> &ndash; для доступа к бинарникам установленных гемов и автокомплиту rbenv команд</p>

<p><code>exec $SHELL</code> &ndash; перезапускам шел</p>

<h5>ruby-build &ndash; для простой загрузки и сборки ruby из исходников</h5>

<p><code>git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</code></p>

<p>устанвливаем ruby <code>rbenv install 1.9.3-p392</code> (для этого необходимо немало времени, поэтому наберитесь терпения, на машине с 512 оперативы эта операция занимает около 7 минут)</p>

<p>Пока приложение настраивается можно добавить пару строк в ~/.gemrc файл, для того, чтобы не устанавливать документацию вместе с гемами</p>

<p>install: &mdash;no-ri &mdash;no-rdoc
update: &mdash;no-ri &mdash;no-rdoc</p>

<p>после этого <code>rbenv global 1.9.3-p392</code> и <code>gem install bundler</code></p>

<h3>Локальное приложение для деплоя</h3>

<p>Теперь давайте подготовим наше локальное приложение (я для
этих целей создал простое приложение rails</p>

<p><code>rails new simple_deployment -T</code></p>

<p><code>rails g scaffold item name description:text</code> &ndash; для того, чтобы проверить и соединение с базой данных.</p>

<p>создадим файл .rbenv-version (<code>echo '1.9.3-p392' &gt; .rbenv-version</code>) для того, чтобы unicorn запускал необходимую версию ruby</p>

<p>также добавим в Gemfile gem unicorn и gem capistrano (последний в группу :development)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;unicorn&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>и запустим в консоли <code>capify .</code> (capistrano создаст для нас файлик config/deploy.rb, который и будет &ldquo;пультом управления&rdquo; нашего приложения на сервере)</p>

<p><strong>config/deploy.rb</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;bundler/capistrano&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;deploy/assets&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:repository</span><span class="p">,</span> <span class="s1">&#39;YOUR_GIT_OR_SVN_REPOSITORY_URL&#39;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:scm</span><span class="p">,</span> <span class="ss">:git</span>
</span><span class='line'>
</span><span class='line'><span class="n">server</span> <span class="s1">&#39;YOUR_SERVER_IP_OR_HOSTNAME&#39;</span><span class="p">,</span> <span class="ss">:app</span><span class="p">,</span> <span class="ss">:web</span><span class="p">,</span> <span class="ss">:db</span><span class="p">,</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:ssh_options</span><span class="p">,</span> <span class="p">{</span> <span class="ss">:forward_agent</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span>
</span><span class='line'><span class="n">default_run_options</span><span class="o">[</span><span class="ss">:shell</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;bash -l&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:user</span><span class="p">,</span> <span class="s1">&#39;deployer&#39;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:group</span><span class="p">,</span> <span class="s1">&#39;staff&#39;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:use_sudo</span><span class="p">,</span> <span class="kp">false</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rails_env</span><span class="p">,</span> <span class="s1">&#39;production&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:project_name</span><span class="p">,</span> <span class="s1">&#39;simple_deployment&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s2">&quot;/home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Restart of Unicorn&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:restart</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:no_release</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;kill -s USR2 `cat /home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">/shared/pids/unicorn.pid`&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Start unicorn&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:start</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:no_release</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2"> ; bundle exec unicorn_rails -c config/unicorn.rb -D -E </span><span class="si">#{</span> <span class="n">rails_env</span> <span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Stop unicorn&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:stop</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:no_release</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;kill -s QUIT `cat /home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">/shared/pids/unicorn.pid`&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="s1">&#39;deploy:finalize_update&#39;</span><span class="p">,</span> <span class="s1">&#39;deploy:symlink_db&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:deploy</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Symlinks the database.yml&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:symlink_db</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;ln -nfs </span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="s2">/shared/config/database.yml </span><span class="si">#{</span><span class="n">release_path</span><span class="si">}</span><span class="s2">/config/database.yml&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Проекты у нас на сервере будут жить в домашнией папке + projects, т.е. для нашего пользователя deployer это будет /home/deployer/projects.</p>

<p>В каждой папке приложения находятся еще три папки (releases &ndash; где хранятся все релизы нашего приложения, current &ndash; симлинк на текущий релиз из папки releases и shared, где хранится общая шняга для все релизов: пиды, идентификаторы сессий, логи и прочее.)</p>

<p>Также необходимо добавить ssh ключ сервера на github или bitbucket</p>

<p>содержимое ключа <code>cat ~/.ssh/id_rsa.pub</code>, если такого файла нет, то нужно его сгенерировать <code>ssh-keygen -t rsa</code></p>

<p>и сделать с сервера <code>ssh git@bitbucket.org</code>, чтобы подтвердить соединение.</p>

<h5>config/unicorn.rb &ndash; минимальный конфиг для нашего HTTP сервера.</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">worker_processes</span> <span class="mi">2</span>
</span><span class='line'><span class="n">user</span> <span class="s1">&#39;deployer&#39;</span><span class="p">,</span> <span class="s1">&#39;staff&#39;</span>
</span><span class='line'><span class="n">preload_app</span> <span class="kp">true</span>
</span><span class='line'><span class="n">timeout</span> <span class="mi">30</span>
</span><span class='line'>
</span><span class='line'><span class="n">project_name</span> <span class="o">=</span> <span class="s1">&#39;simple_deployment&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">working_directory</span> <span class="s2">&quot;/home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">/current&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">listen</span> <span class="s2">&quot;/tmp/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">.socket&quot;</span><span class="p">,</span> <span class="ss">:backlog</span> <span class="o">=&gt;</span> <span class="mi">64</span>
</span><span class='line'><span class="n">pid</span> <span class="s2">&quot;/home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">/shared/pids/unicorn.pid&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">stderr_path</span> <span class="s2">&quot;/home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">/shared/log/unicorn.stderr.log&quot;</span>
</span><span class='line'><span class="n">stdout_path</span> <span class="s2">&quot;/home/deployer/projects/</span><span class="si">#{</span> <span class="n">project_name</span> <span class="si">}</span><span class="s2">/shared/log/unicorn.stdout.log&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Если вы указали все верно в config/deploy.rb, то можно запустить <strong>cap deploy:setup</strong> для создания capistrano необходимых для разворачивания приложения папок на стороне сервера.</p>

<h3>Nginx</h3>

<p>Устанвливаем nginx командой <code>sudo apt-get install nginx</code> и переходим к его настройке. Для начала отредактируем файл <strong>/etc/nginx/nginx.conf</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="n">deployer</span> <span class="n">staff</span><span class="p">;</span>
</span><span class='line'><span class="n">worker_processes</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pid</span> <span class="sr">/var/</span><span class="n">run</span><span class="o">/</span><span class="n">nginx</span><span class="o">.</span><span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="n">events</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">worker_connections</span> <span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>  <span class="n">multi_accept</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">http</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">sendfile</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>  <span class="n">tcp_nopush</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>  <span class="n">tcp_nodelay</span> <span class="n">off</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">include</span> <span class="sr">/etc/n</span><span class="n">ginx</span><span class="o">/</span><span class="n">mime</span><span class="o">.</span><span class="n">types</span><span class="p">;</span>
</span><span class='line'>  <span class="n">default_type</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span><span class="p">;</span>
</span><span class='line'>  <span class="n">access_log</span> <span class="sr">/var/</span><span class="n">log</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">access</span><span class="o">.</span><span class="n">log</span><span class="p">;</span>
</span><span class='line'>  <span class="n">error_log</span> <span class="sr">/var/</span><span class="n">log</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">error</span><span class="o">.</span><span class="n">log</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gzip</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gzip_disable</span> <span class="s2">&quot;msie6&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gzip_proxied</span> <span class="n">any</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gzip_min_length</span> <span class="mi">500</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gzip_types</span> <span class="n">text</span><span class="o">/</span><span class="n">plain</span> <span class="n">text</span><span class="o">/</span><span class="n">css</span> <span class="n">application</span><span class="o">/</span><span class="n">json</span> <span class="n">application</span><span class="o">/</span><span class="n">x</span><span class="o">-</span><span class="n">javascript</span> <span class="n">text</span><span class="o">/</span><span class="n">xml</span> <span class="n">application</span><span class="o">/</span><span class="n">xml</span> <span class="n">application</span><span class="o">/</span><span class="n">xml</span><span class="o">+</span><span class="n">rss</span> <span class="n">text</span><span class="o">/</span><span class="n">javascript</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">include</span> <span class="sr">/etc/n</span><span class="n">ginx</span><span class="o">/</span><span class="n">conf</span><span class="o">.</span><span class="n">d</span><span class="o">/*.</span><span class="n">conf</span><span class="p">;</span>
</span><span class='line'>  <span class="kp">include</span> <span class="sr">/etc/n</span><span class="n">ginx</span><span class="o">/</span><span class="n">sites</span><span class="o">-</span><span class="n">enabled</span><span class="o">/*</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Последняя строчка нужна, чтобы nginx загружал свои конфиги и из папка <strong>/etc/nginx/sites-enabled/</strong> (это нужно для того, чтобы не хранить все конфиги для проектов в одном файле).</p>

<p>А теперь nginx конфиг для нашего приложения.Будем считать, что наше приложение называется simple_deployment, а домен у него simple-deployment.com (чтобы вам удобнее было заменять на свои данные).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">upstream</span> <span class="n">simple_deployment</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">server</span> <span class="ss">unix</span><span class="p">:</span><span class="sr">/tmp/sim</span><span class="n">ple_deployment</span><span class="o">.</span><span class="n">socket</span> <span class="n">fail_timeout</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">server_name</span> <span class="n">simple</span><span class="o">-</span><span class="n">deployment</span><span class="o">.</span><span class="n">com</span><span class="p">;</span>
</span><span class='line'>  <span class="n">root</span> <span class="sr">/home/</span><span class="n">deployer</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">simple_deployment</span><span class="o">/</span><span class="n">current</span><span class="o">/</span><span class="kp">public</span><span class="p">;</span>
</span><span class='line'>  <span class="n">access_log</span> <span class="sr">/var/</span><span class="n">log</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">simple_deployment_access</span><span class="o">.</span><span class="n">log</span><span class="p">;</span>
</span><span class='line'>  <span class="n">rewrite_log</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">location</span> <span class="o">/</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">proxy_pass</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//sim</span><span class="n">ple_deployment</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_redirect</span> <span class="n">off</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_set_header</span> <span class="no">Host</span> <span class="vg">$host</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_set_header</span> <span class="n">X</span><span class="o">-</span><span class="no">Real</span><span class="o">-</span><span class="no">IP</span> <span class="vg">$remote_addr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_set_header</span> <span class="n">X</span><span class="o">-</span><span class="no">Forwarded</span><span class="o">-</span><span class="no">For</span> <span class="vg">$proxy_add_x_forwarded_for</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_max_body_size</span> <span class="mi">10</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>    <span class="n">client_body_buffer_size</span> <span class="mi">128</span><span class="n">k</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">proxy_connect_timeout</span> <span class="mi">90</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_send_timeout</span> <span class="mi">90</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_read_timeout</span> <span class="mi">90</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_buffer_size</span> <span class="mi">4</span><span class="n">k</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_buffers</span> <span class="mi">4</span> <span class="mi">32</span><span class="n">k</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_busy_buffers_size</span> <span class="mi">64</span><span class="n">k</span><span class="p">;</span>
</span><span class='line'>    <span class="n">proxy_temp_file_write_size</span> <span class="mi">64</span><span class="n">k</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">location</span> <span class="o">~</span> <span class="o">^/</span><span class="p">(</span><span class="n">assets</span><span class="o">|</span><span class="n">images</span><span class="o">|</span><span class="n">javascripts</span><span class="o">|</span><span class="n">stylesheets</span><span class="o">|</span><span class="nb">system</span><span class="p">)</span><span class="o">/</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">root</span> <span class="sr">/home/</span><span class="n">deployer</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">simple_deployment</span><span class="o">/</span><span class="n">current</span><span class="o">/</span><span class="kp">public</span><span class="p">;</span>
</span><span class='line'>    <span class="n">expires</span> <span class="n">max</span><span class="p">;</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>и удалить файлы <strong>/etc/nginx/sites-available/default</strong> и <strong>/etc/nginx/sites-enabled/default</strong></p>

<p>Теперь можно смело пробовать запускать <code>cap deploy:migrations</code>  в консоли локального приложения. Если все было выполнено по данной заметке, то вы должны получить развернутое приложения на сервере в папке <strong>/home/deployer/projects/simple_deployment</strong>, если вы конечно строго следовали инструкциям.</p>

<p>Запустим последную команду на сервере, запустим nginx (<code>sudo service nginx start</code>).</p>

<p>Теперь, после деплоя можно запускать команду cap start или cap stop для запуска сервера или его остановки. Надеюсь, следуя этому мануалу, у вас получилось развернуть свое приложение на сервере. Если нет, то милости прошу в комментарии, чем смогу, постараюсь помочь.</p>

<p>Ссылки на дополнительные материлы:</p>

<ul>
<li><a href="http://gembundler.com/deploying.html">деплой вместе с bundler</a></li>
<li><a href="http://unicorn.bogomips.org/Unicorn/Configurator.html">конфигурация unicorn&#8217;а</a></li>
</ul>


<p>Enjoy, my little colleagues :)</p>

<p>UPDATE: 06.03.2013
Немного защитим наш сервер, в первую очередь давайте запретим логин рута по ssh, у нас на это есть пользователь deployer, который может выполлнять команды от рута с помощью sudo. Для этого в файле <strong>/etc/ssh/sshd_config</strong> необходимо изменить
<strong>PermitRootLogin</strong> на <strong>no</strong> и <strong>PasswordAuthentication</strong> на <strong>no</strong>, последняя настройка запретит авторизацию для SSH по паролю (только по ключу).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Перенос sqlite3 базы данных в Postgres (Heroku)]]></title>
    <link href="http://zudochkin.ru/2013/01/slite3-to-posgres-migration"/>
    <updated>2013-01-25T12:12:16+04:00</updated>
    <id>http://zudochkin.ru/2013/01/slite3-to-posgres-migration</id>
    <content type="html"><![CDATA[<p>Иногда бывает крайне необходимо конвертировать имеющуюся базу данных в одном формате в формат другой. Сегодня я расскажу вам как это быстро и безболезненно (почти) сделать.<!-- more --></p>

<p>Для начала нам понадобится замечательный <a href="https://github.com/ricardochimal/taps">gem taps</a> и запущенный с его помощью локальный сервер с бекендом из Sinatra.</p>

<p>Т.к. часто создавая новый проект, не хочется особо заморачиваться и создавать для этого отдельную базу данных в Postgres, я обычно использую базу данных по умолчанинию, в рельсах это, как вам известно, sqlite. Но бывает иногда необходимо скопировать данные с локальной базы данных в удаленную, к примеру, если вы хостите проект на heroku, где по умолчанию используется postgres.</p>

<p>Итак, поехали, для начала создаем сервер:</p>

<p><code>taps server sqlite://db/development.sqlite3 user pass</code>, где user &ndash; это имя пользователя для доступа к нашему серверу (серверу taps), pass соответственно пароль.</p>

<p>Дальше нам нужно скопировать нашу sqlite базу данных в postgres, для этого достаточно запустить одну команду:</p>

<p><code>taps pull postgres://zudochkin@localhost/project_development http://user:pass@localhost:5000</code>, где postgres &ndash; это адаптер базы данных, вы можете смело использовать mysql, zudochkin &ndash; имя пользователя для postgres, project_development &ndash; имя базы данных, куда я собираюсь импортировать данные, <a href="http://user:pass@localhost:5000">http://user:pass@localhost:5000</a> &ndash; коннектимся к нашему серверу, где в качестве имени пользователя указали user, в качестве пароля pass, а крутится все это дело по умолчанию на 5000 порте.</p>

<p>Теперь, если зайти и посмотреть через pgAdmin в нашу postgres базу данных, то мы увидим данные, скопированные из sqlite3.</p>

<p>Дальше необходимо сделать postgres дамп, для того, чтобы импортировать его в heroku базу данных.</p>

<p><code>pg_dump -Fc --no-acl --no-owner -h localhost -U zudochkin project_development &gt; project_development.dump</code></p>

<p>Загружаем дамп куда-нибудь в интернет: подойдет любой фтп или что-нибудь наподобие <a href="http://getcloudapp.com">CloudApp</a>, я использую последнее, потому что есть нативный клиент под Mac и он удобен в работе.</p>

<p>Дальше получаем URL для доступа к postgres базе данных heroku, для этого в папке с приложением выполнеяем (или из любой папке, но дописав к команде <code>--app app_name</code>) <code>heroku config | grep DATABASE_URL</code> и увидим длинный адрес, это и есть ссылка для доступа к БД. Если вы, как я используете cloudApp, то знайте, что, когда вы копируете ссылку на файл, это, не прямая ссылка и поэтому загрузить на heroku дамп у вас не получится, для того, чтобы увидеть реально прямую ссылку необходимо набрать следующее <code>curl -I http://cl.ly/2h1k1X3Z2j4f/project_development.dump | grep Location</code> и вы увидите прямую ссылку после слова <strong>&ldquo;Location: &rdquo;</strong>. Длинный и запутанный адрес это ссылка, которую вам дал cloudApp для доступа к файлу.</p>

<p><img class="image" src="http://zudochkin.ru/images/posts/2013-01-slite3-to-posgres-migration/Screen-Shot-2013-01-25-at-12.05.28-PM1-300x146.png"></p>

<p>После этих манипуляций давайте запустим импорт базы данных из папки с проектом <code>heroku pgbackups:restore DATABASE 'http://f.cl.ly/items/4G2u393d432U3V0u2X1d/project_development.dump'</code> если все прошло нормально, то мы увидим</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Retrieving... done
</span><span class='line'>Restoring... done</span></code></pre></td></tr></table></div></figure>


<p>если же что-то пошло не так и вы увидели сообщение об ошибке, напишите <code>heroku logs --ps pgbackups</code> и вы увидите что именно пошло не так.</p>

<p>Надеюсь, данная заметка вам поможет перенести локальные данные на heroku или просто сделать из sqlite3 базы данных postgres или mysql.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Оповещение после выполнения "тяжелой" фоновой задачи с помощью faye и PrivatePub]]></title>
    <link href="http://zudochkin.ru/2013/01/resque-with-private-pub-and-rails"/>
    <updated>2013-01-21T22:45:24+04:00</updated>
    <id>http://zudochkin.ru/2013/01/resque-with-private-pub-and-rails</id>
    <content type="html"><![CDATA[<p>Допустим нам необоходимо после выполнения большой задачи в фоновом режиме сообщить об этом пользователю и совершить что-нибудь, например, показать ему какой-нибудь popup. <!-- more -->
Для этого по-старинке, можно с интервалом, скажем в 1 секунду опрашивать сервер и смотреть не завершилась ли наша задача, но в пору HTML5  делать это, по крайней мере, не престижно. Будем использовать для этих целей инструмент по обмену сообщениями между сервером и клиентом <strong>Faye</strong>.</p>

<h3>Инструменты</h3>

<p>Нам понадобится Rails приложение, к которому мы и будем привязывать всю эту функциональность. Также будем использовать <strong>Resque</strong> для выполнений фоновых задач &ndash; инструмент, зарекомендовавший себя, как надежный и стабильный помощник, спасающий всегда, когда нужно выполнить тяжелые задачи в фоне. Вместе с <strong>faye</strong> воспользуемся оберткой для него от Ryan Bates <strong>Private Pub</strong>, который мне очень облегчил жизнь, надеюсь, и облегчит вам.</p>

<h3>Реализация</h3>

<p>Для начала установим redis и обновим наш Gemfile, дополнив его необходимыми гемами resque, faye, private_pub, thin.</p>

<p>Я буду рассказать все на примере Mac OS, установка подобного инструментарий, скажем, на Ubuntu, не должна вызвать вопросов, потому что инструменты очень распространенные.</p>

<p>Устанавливал redis я с помощью всем известного пакетного менеджера Homebrew, напечатав в терминале всего одну команду <code>brew install redis</code></p>

<p>Допустим у нас имеется какой-нибудь тяжелый объект с несколькими картинками, которые лежат в Amazon S3 и, чтобы создать копию этого объекта нам понадобится скачать все эти картинки, чтобы вновь их туда загрузить,  привязав в новому объекту. Не спрашивайте почему так сложно, так работает CarrierWave или я просто не нашел лучшего решения.</p>

<p>Если у нас раньше был метод в контролле, к примеру, clone, которй вызывал метод из модели, делающий всю грязную работу, то сейчас нам нужно лишь добавить новую задачу для resque, выглядеть это будет примерно так</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">clone</span>
</span><span class='line'>  <span class="no">Resque</span><span class="o">.</span><span class="n">enqueue</span><span class="p">(</span><span class="no">CloneProfileWorker</span><span class="p">,</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь тяжелая задача будет добавляться в очередь всякий раз, когда мы пройдем по ссылке <strong>/profiles/#{ id }/clone</strong>.</p>

<p>Давайте поставим и настроим PrivatePub, который будет со стороны клиента подписываться на определенные события, и со стороны сервера, после наступления определенного события (в нашем примере это, когда resque job отработает) делать нужные нам вещи.</p>

<p>Для этого в консоли нужно запустить <code>rails g private_pub:install</code></p>

<p>и добавить в файл app/assets/javascripts/application.js[.cofeee] строчку
<code>#= require private_pub</code>, если вы используете cofeeScript или же <code>//= require private_pub</code>, если js</p>

<p>и дальше во вьюхе <strong>/profile/clone.html.haml</strong> (я использую haml в данном проекте)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">subscribe_to</span> <span class="s2">&quot;/profile_cloning_</span><span class="si">#{</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span> <span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">:javascript</span>
</span><span class='line'>  <span class="no">PrivatePub</span><span class="o">.</span><span class="n">subscribe</span><span class="p">(</span><span class="s1">&#39;/profile_cloning_#{ params[:id] }&#39;</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">channel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">location</span><span class="o">.</span><span class="n">href</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">url</span><span class="p">;</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Первая строчка это метод из гема, который инициализует объект необходимыми параметрами из файла /config/private_pub.yml, а после мы &ldquo;подписываемся на событие &lsquo;/profile_cloning_#{ params[:id] }&rsquo;, где в params[:id] содержится текущий id профиля. При наступлении данного события, мы перенаправляем пользователя на страницу &lsquo;/profile/#{ new_id }/edit&rdquo;, полный урл мы получим после того, как resque job отработает.</p>

<p><strong>app/workers/clone_profile_worker.rb</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;resque&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CloneProfileWorker</span>
</span><span class='line'>  <span class="vi">@queue</span> <span class="o">=</span> <span class="ss">:default</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">perform</span><span class="p">(</span><span class="n">profile_id</span><span class="p">)</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">=</span> <span class="no">Profile</span><span class="o">.</span><span class="n">find</span> <span class="n">profile_id</span>
</span><span class='line'>    <span class="n">new_profile</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="n">clone_self</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">new_profile</span><span class="o">.</span><span class="n">is_a?</span> <span class="no">Profile</span>
</span><span class='line'>      <span class="no">PrivatePub</span><span class="o">.</span><span class="n">publish_to</span> <span class="s2">&quot;/profile_cloning_</span><span class="si">#{</span> <span class="n">profile_id</span> <span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="s2">&quot;/profiles/</span><span class="si">#{</span> <span class="n">new_profile</span><span class="o">.</span><span class="n">id</span> <span class="si">}</span><span class="s2">/edit&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>В данном воркере нет ничего магического: сначала мы клонируем наш профиль и если все прошло успешно, то оповещаем нашего клиента и передаем туда url, на который он перенаправится.</p>

<p>Проверяем работоспособность</p>

<p>Запускаем в разных окнах терминала:</p>

<ul>
<li><code>rails s</code></li>
<li><code>redis-server /usr/local/etc/redis.conf</code> (у меня MacOs, на других ОС должно быть нечто подобное)</li>
<li><code>VERBOSE=1 rake resque:work QUEUE=*</code> (запускаем все очереди, устанвливаем verbose=1 для того, чтобы видеть что происходит внутри resque)</li>
<li><code>rackup private_pub.ru -s thin -E production</code> (сервер для PrivatePub и Faye)</li>
</ul>


<p>Проходим по ссылке наподобие <strong>/profiles/73/clone</strong> и смотрим в терминале как отрабатывает наш resque job и мы перенаправляемся на редактирование уже склонированного профиля, если все отработало без ошибок. Если же возникли ошибки, то они отобразятся в терминале, если произойдет что-то невообразимое и непредвиденное, пишите в комментариях, я попробую помочь вам.</p>
]]></content>
  </entry>
  
</feed>
